<UserControl x:Class="Tsukuru.Maps.Compiler.Views.ResourcePackingView"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
             xmlns:local="clr-namespace:Tsukuru.Maps.Compiler.Views"
             xmlns:viewModels="clr-namespace:Tsukuru.Maps.Compiler.ViewModels"
             xmlns:adonisUi="clr-namespace:AdonisUI;assembly=AdonisUI"
             xmlns:converters="clr-namespace:Tsukuru.Converters"
             mc:Ignorable="d" 
             TextElement.Foreground="{DynamicResource MaterialDesignBody}"
             TextElement.FontWeight="Regular"
             TextElement.FontSize="13"
             TextOptions.TextFormattingMode="Ideal"
             TextOptions.TextRenderingMode="Auto"
             d:DesignHeight="600" d:DesignWidth="600" 
             d:DataContext="{d:DesignInstance viewModels:ResourcePackingViewModel}">
    <UserControl.Resources>
        <converters:BooleanToPackingModeConverter x:Key="BooleanToPackingModeConverter" />
    </UserControl.Resources>

    <Grid Margin="32">
        <Grid.RowDefinitions>
            <RowDefinition Height="Auto" />
            <RowDefinition />
        </Grid.RowDefinitions>

        <StackPanel Grid.Row="0"
                    Margin="0,0,0,10">

        </StackPanel>

        <Grid Grid.Row="1">
            <Grid.RowDefinitions>
                <RowDefinition Height="Auto" />
                <RowDefinition />
            </Grid.RowDefinitions>

            <Grid Grid.Row="0">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition />
                    <ColumnDefinition Width="Auto" />
                </Grid.ColumnDefinitions>
                <CheckBox 
                    Grid.Column="0"
                    IsChecked="{Binding PerformResourcePacking}" 
                    Content="Pack resources into your map?" />

                <Button
                    Grid.Column="1"
                    Command="{Binding AddFolderCommand}"
                    FontSize="12"
                    Height="Auto"
                    Style="{DynamicResource {x:Static adonisUi:Styles.AccentButton}}">
                    <StackPanel Orientation="Horizontal">
                        <TextBlock Text="+"
                                   FontSize="20"
                                   FontWeight="Bold"
                                   VerticalAlignment="Center"/>

                        <TextBlock Text="Add folder"
                                   Margin="{adonisUi:Space 1, 0, 0, 0}"
                                   VerticalAlignment="Center"/>
                    </StackPanel>
                </Button>
            </Grid>
                
            <DataGrid 
                Grid.Row="1" 
                ItemsSource="{Binding FoldersToPack}"
                AutoGenerateColumns="False"
                FrozenColumnCount="1"
                EnableRowVirtualization="True"
                EnableColumnVirtualization="True"
                VerticalScrollBarVisibility="Visible">
                    <DataGrid.Resources>
                        <Style x:Key="CellErrorStyle"
                                   TargetType="{x:Type TextBlock}">
                            <Setter Property="Validation.ErrorTemplate"
                                        Value="{DynamicResource {x:Static adonisUi:Templates.ValidationErrorTemplate}}"/>
                            <Style.Triggers>
                                <Trigger Property="Validation.HasError" Value="True">
                                    <Setter Property="Background">
                                        <Setter.Value>
                                            <SolidColorBrush Color="{DynamicResource {x:Static adonisUi:Colors.ErrorColor}}" Opacity="0.25"/>
                                        </Setter.Value>
                                    </Setter>
                                </Trigger>
                            </Style.Triggers>
                        </Style>
                    </DataGrid.Resources>

                    <DataGrid.Columns>
                        <DataGridTextColumn Header="Name"
                                                Binding="{Binding Name, ValidatesOnDataErrors=True}"
                                                ElementStyle="{StaticResource CellErrorStyle}"
                                                MinWidth="200" 
                                                IsReadOnly="True"/>

                        <DataGridTextColumn 
                            Header="Path"
                            Binding="{Binding Folder, ValidatesOnDataErrors=True}"
                            ElementStyle="{StaticResource CellErrorStyle}"
                            IsReadOnly="True"/>

                        <DataGridCheckBoxColumn 
                            Header="Pack only used files?"
                            Binding="{Binding Intelligent}"
                            IsReadOnly="False" />

                        <DataGridCheckBoxColumn 
                            Header="Pack all files?"
                            Binding="{Binding NotIntelligent}"
                            IsReadOnly="False" />
                </DataGrid.Columns>

                    <DataGrid.RowDetailsTemplate>
                        <DataTemplate>
                            <local:FolderDataGridTemplateView />
                        </DataTemplate>
                    </DataGrid.RowDetailsTemplate>

                    <DataGrid.RowValidationRules>
                        <DataErrorValidationRule ValidatesOnTargetUpdated="True" ValidationStep="UpdatedValue" />
                    </DataGrid.RowValidationRules>

                </DataGrid>
        </Grid>
    </Grid>
</UserControl>
